; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	antlr3IntStreamNew
EXTRN	__imp_calloc:PROC
EXTRN	__imp_free:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$antlr3IntStreamNew DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$antlr3IntStreamNew
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$freeStream DD imagerel freeStream
	DD	imagerel freeStream+47
	DD	imagerel $unwind$freeStream
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$freeStream DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$antlr3IntStreamNew DD 021501H
	DD	070025206H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\oss\third_party\antlr\libantlr3c-3.4\src\antlr3intstream.c
;	COMDAT freeStream
_TEXT	SEGMENT
stream$ = 48
freeStream PROC						; COMDAT

; 61   : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 62   : 	ANTLR3_FREE(stream);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR stream$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free

; 63   : }

  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
freeStream ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\oss\third_party\antlr\libantlr3c-3.4\src\antlr3intstream.c
;	COMDAT antlr3IntStreamNew
_TEXT	SEGMENT
stream$ = 32
antlr3IntStreamNew PROC					; COMDAT

; 42   : {

$LN4:
  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 0c 00 00 00	 mov	 ecx, 12
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 43   : 	pANTLR3_INT_STREAM	stream;
; 44   : 
; 45   : 	// Allocate memory
; 46   : 	//
; 47   : 	stream  = (pANTLR3_INT_STREAM) ANTLR3_CALLOC(1, sizeof(ANTLR3_INT_STREAM));

  00015	ba 80 00 00 00	 mov	 edx, 128		; 00000080H
  0001a	b9 01 00 00 00	 mov	 ecx, 1
  0001f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_calloc
  00025	48 89 44 24 20	 mov	 QWORD PTR stream$[rsp], rax

; 48   : 
; 49   : 	if	(stream == NULL)

  0002a	48 83 7c 24 20
	00		 cmp	 QWORD PTR stream$[rsp], 0
  00030	75 04		 jne	 SHORT $LN2@antlr3IntS

; 50   : 	{
; 51   : 		return	NULL;

  00032	33 c0		 xor	 eax, eax
  00034	eb 15		 jmp	 SHORT $LN1@antlr3IntS
$LN2@antlr3IntS:

; 52   : 	}
; 53   : 
; 54   : 	stream->free    =  freeStream;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR stream$[rsp]
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:freeStream
  00042	48 89 48 78	 mov	 QWORD PTR [rax+120], rcx

; 55   : 
; 56   : 	return stream;

  00046	48 8b 44 24 20	 mov	 rax, QWORD PTR stream$[rsp]
$LN1@antlr3IntS:

; 57   : }

  0004b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
antlr3IntStreamNew ENDP
_TEXT	ENDS
END
